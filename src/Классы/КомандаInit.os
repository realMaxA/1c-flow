
#Использовать gitrunner

Перем Лог;
Перем ТекущаяКоманда;

///////////////////////////////////////////////////////////////////////////////////////////////////
// Прикладной интерфейс

Процедура ЗарегистрироватьКоманду(Знач ИмяКоманды, Знач Парсер) Экспорт
		
	Лог = ПараметрыСистемы.ПолучитьЛог();
	ТекущаяКоманда = ИмяКоманды;
	
	Команда = Парсер.ОписаниеКоманды(ИмяКоманды, "Инициализировать 1c-flow");
	Парсер.ДобавитьКоманду(Команда);
	Парсер.ДобавитьПозиционныйПараметрКоманды(Команда, "ПутьКФайлуКонфигурации", "Путь к файлу конфигурации для инициализации хранилища.");
	Парсер.ДобавитьПозиционныйПараметрКоманды(Команда, "ПутьКОсновномуХранилищу", "Путь к основному хранилищу продукта.");
	Парсер.ДобавитьПозиционныйПараметрКоманды(Команда, "ПользовательОсновногоХранилища", "Пользователь основного хранилища продукта.");
	Парсер.ДобавитьПозиционныйПараметрКоманды(Команда, "ПарольОсновногоХранилища", "Пароль основного хранилища продукта.");
	Парсер.ДобавитьПозиционныйПараметрКоманды(Команда, "ИмяПродукта", "Имя продукта.");
	Парсер.ДобавитьПозиционныйПараметрКоманды(Команда, "ПутьКРепозиторию", "Путь к локальному репозиторию продукта.
	|	Необязательный, если не указан, используется текущий каталог");
КонецПроцедуры

// Выполняет логику команды
// 
// Параметры:
//   ПараметрыКоманды - Соответствие ключей командной строки и их значений
//
Функция ВыполнитьКоманду(Знач ПараметрыКоманды) Экспорт

	ПутьКФайлуКонфигурации         = ПараметрыКоманды["ПутьКФайлуКонфигурации"];
	ПутьКОсновномуХранилищу        = ПараметрыКоманды["ПутьКОсновномуХранилищу"];
	ПользовательОсновногоХранилища = ПараметрыКоманды["ПользовательОсновногоХранилища"];
	ПарольОсновногоХранилища       = ПараметрыКоманды["ПарольОсновногоХранилища"];
	ИмяПродукта                    = ПараметрыКоманды["ИмяПродукта"];
	ПутьКРепозитарию               = ПараметрыКоманды["ПутьКРепозитарию"];
	
	Если НЕ УказаныОбязательныеПараметры(ПараметрыКоманды) Тогда

		Лог.Ошибка(НСтр("ru = 'Указаны не все обязательные параметры'"));

		ПараметрыКомандыHelp = Новый Соответствие;
		ПараметрыКомандыHelp.Вставить("Команда", ТекущаяКоманда);
		МенеджерКомандПриложения.ВыполнитьКоманду("help", ПараметрыКомандыHelp);

		Возврат 1;

	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ПутьКРепозитарию) Тогда
		ПутьКРепозитарию = ".";
	КонецЕсли;

	// Переделать на использование gitrunner, когда в нем появится соответствующий функционал
	Команда = Новый Команда;

	Команда.УстановитьКоманду("git");
	Команда.УстановитьРабочийКаталог(ПутьКРепозитарию);
	Команда.УстановитьКодировкуВывода(КодировкаТекста.UTF8);
	
	Команда.ДобавитьПараметр("rev-parse");
	Команда.ДобавитьПараметр("--show-toplevel");
	
	ЭтоРепозитарийGit = (Команда.Исполнить() = 0);

	Если Не ЭтоРепозитарийGit Тогда
		Лог.Ошибка(НСтр("ru = 'Рабочий каталог не является каталогом git-репозитария'"));

		Возврат 1;
	КонецЕсли;

	ОбновитьКонфигурацию(ПараметрыКоманды);
	
	Возврат 0;
	
КонецФункции

Процедура ОбновитьКонфигурацию(Знач ПараметрыКоманды)

	ПараметрыКонфигурации1сFlow = Новый Соответствие;
	ПараметрыКонфигурации1сFlow.Вставить("ПутьКОсновномуХранилищу",        ПараметрыКоманды["ПутьКОсновномуХранилищу"]);
	ПараметрыКонфигурации1сFlow.Вставить("ПользовательОсновногоХранилища", ПараметрыКоманды["ПользовательОсновногоХранилища"]);
	ПараметрыКонфигурации1сFlow.Вставить("ПарольОсновногоХранилища",       ПараметрыКоманды["ПарольОсновногоХранилища"]);
	
	МенеджерКомандПриложения.ВыполнитьКоманду("config", ПараметрыКонфигурации1сFlow);

КонецПроцедуры

Функция УказаныОбязательныеПараметры(Знач ПараметрыКоманды)
	Возврат (Истина
		И ЗначениеЗаполнено(ПараметрыКоманды["ПутьКФайлуКонфигурации"]) 
		И ЗначениеЗаполнено(ПараметрыКоманды["ПутьКОсновномуХранилищу"])
		И ЗначениеЗаполнено(ПараметрыКоманды["ПользовательОсновногоХранилища"])
		И ЗначениеЗаполнено(ПараметрыКоманды["ПарольОсновногоХранилища"])
		И ЗначениеЗаполнено(ПараметрыКоманды["ИмяПродукта"])
	);
КонецФункции // УказаныВсеПараметры()
