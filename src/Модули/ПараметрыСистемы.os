
#Использовать logos

Перем Лог Экспорт;

Функция ИмяЛогаСистемы() Экспорт
	Возврат "oscript.app.1c-flow";
КонецФункции

//	Форматирование логов
//
Функция Форматировать(Знач Уровень, Знач Сообщение) Экспорт

	Возврат СтрШаблон("%1: %2 - %3", ТекущаяДата(), УровниЛога.НаименованиеУровня(Уровень), Сообщение);

КонецФункции

//	Инициализирует и настраивает лог приложения
// 
// Параметры:
//	УровеньЛогаСтрока - Строка - уровень логов, выводимых в консоль при выполнении скрипта
//
// Возвращаемое значение:
//   Лог   - Инициализированный лог, готовый к использованию
//
Функция ИнициализироватьЛог(Знач УровеньЛогаСтрока = Неопределено) Экспорт

	Если УровеньЛогаСтрока = Неопределено Тогда
		УровеньЛога = УровниЛога.Ошибка;
	Иначе
		УровеньЛога = УровниЛога[УровеньЛогаСтрока];
	КонецЕсли;
	
	Лог = Логирование.ПолучитьЛог(ИмяЛогаСистемы());
	Лог.УстановитьУровень(УровеньЛога);
	Лог.УстановитьРаскладку(ЭтотОбъект);

	Возврат Лог;

КонецФункции

//	Возвращает лог приложения
// 
// Возвращаемое значение:
//   Лог   - Текущий лог приложения
//
Функция ПолучитьЛог() Экспорт

	Возврат Лог;

КонецФункции
	
Процедура ПриРегистрацииКомандПриложения(Знач КлассыРеализацииКоманд) Экспорт
    
    КлассыРеализацииКоманд["help"] = "КомандаСправкаПоПараметрам";
	КлассыРеализацииКоманд["init"] = "КомандаInit";
	КлассыРеализацииКоманд["feature"] = "КомандаFeature";

КонецПроцедуры

// Одна из команд может вызываться неявно, без указания команды.
// Иными словами, здесь указывается какой обработчик надо вызывать, если приложение запущено без какой-либо команды
//  myapp /home/user/somefile.txt будет аналогично myapp default-action /home/user/somefile.txt 
Функция ИмяКомандыПоУмолчанию() Экспорт
	Возврат "help";
КонецФункции